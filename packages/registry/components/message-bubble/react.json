{
  "name": "message-bubble",
  "type": "registry:ui",
  "description": "message-bubble component",
  "dependencies": [
    "date-fns",
    "@sglara/cn"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "name": "message-bubble.css",
      "content": "@custom-variant default {\n  &:where(.message-bubble.default) {\n    background-color: var(--color-medical-50);\n    color: var(--color-medical-900);\n  }\n\n  &:where(.message-bubble.own) {\n    background-color: var(--color-medical-500);\n    color: var(--color-white);\n  }\n}\n",
      "type": "registry:ui"
    },
    {
      "name": "message-bubble.tsx",
      "content": "import {format} from 'date-fns'\nimport {MessageStatus} from '../message-status/message-status'\nimport { cn } from '@sglara/cn'\nimport type { MessageBubbleProps } from './types'\nimport type { MessageStatus as MessageStatusType } from '../message-status/types'\nimport \"./message-bubble.css\";\n\nexport function MessageBubble({\n                                message,\n                                timestamp,\n                                isOwnMessage = false,\n                                status,\n                                className,\n                              }: MessageBubbleProps) {\n  const formattedTime = format(timestamp, 'HH:mm');\n  const messageType = isOwnMessage ? 'sent' : 'received';\n\n  return (\n    <div\n      className={cn('flex', isOwnMessage ? 'justify-end' : 'justify-start', className)}\n      role=\"listitem\"\n      aria-label={`${messageType} message at ${formattedTime}`}\n    >\n      <div\n        className={`rounded-lg p-4 max-w-[80%] relative message-bubble ${isOwnMessage ? \"own\" : \"default\"}`}\n        aria-live={isOwnMessage ? 'polite' : 'off'}\n      >\n        <p className=\"text-sm\">{message}</p>\n        <div className=\"flex items-center gap-2 mt-2 text-xs opacity-70\">\n          <time dateTime={timestamp.toISOString()} aria-label={`Sent at ${formattedTime}`}>\n            {formattedTime}\n          </time>\n          {isOwnMessage && status && (\n            <MessageStatus status={status as MessageStatusType}/>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n",
      "type": "registry:ui"
    },
    {
      "name": "types.ts",
      "content": "import { type MessageStatus } from '../message-status/types'\n\nexport interface MessageBubbleProps {\n  /** The message content to display */\n  message: string\n  /** The timestamp of the message */\n  timestamp: Date\n  /** Whether this message was sent by the current user */\n  isOwnMessage?: boolean\n  /** The delivery status of the message (only shown for own messages) */\n  status?: MessageStatus\n  /** Additional CSS classes to apply */\n  className?: string\n} \n",
      "type": "registry:ui"
    }
  ],
  "version": "1.0.0",
  "tags": []
}
